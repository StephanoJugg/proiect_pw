{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stefan Madalin\\\\Desktop\\\\ProiectPW\\\\react-frontend\\\\src\\\\components\\\\Admin\\\\AdminReviewUserSubmitted\\\\AdminReviewUserSubmitted.js\";\nimport React from \"react\";\nimport './AdminReviewUserSubmitted.scss';\nimport axios from 'axios';\n\nclass AdminReviewUserSubmitted extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'user_submitted': [],\n      'batch_size': 15,\n      'current_index': 0,\n      usersubmitFlag: false\n    };\n    this.onActionButtonClick = this.onActionButtonClick.bind(this);\n    this.getSubmittedQuestionsTable = this.getSubmittedQuestionsTable.bind(this);\n    this.getSubmittedQuestionsNavigation = this.getSubmittedQuestionsNavigation.bind(this);\n    this.getUserSubmitted = this.getUserSubmitted.bind(this);\n    this.userSubmitQuestion = this.userSubmitQuestion.bind(this);\n  }\n\n  componentDidMount() {\n    this.getUserSubmitted();\n  }\n\n  getUserSubmitted() {\n    const options = {\n      'headers': {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    };\n    axios.get('http://localhost:80/admin/user_submitted', options).then(result => {\n      this.setState({\n        'user_submitted': result.data\n      });\n      this.forceUpdate();\n    }).catch(error => {\n      if ('response' in error) {\n        console.log(error.response);\n      } else {\n        console.log(error);\n      }\n    });\n  }\n\n  onActionButtonClick(question_id, action, index) {\n    const params = new URLSearchParams();\n    params.append('question_id', question_id);\n    params.append('action', action);\n    const options = {\n      'headers': {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    };\n    axios.post('http://localhost:80/admin/user_submitted', params, options).then(() => {\n      this.getUserSubmitted();\n    }).catch(error => {\n      if ('response' in error) {\n        console.log(error.response);\n      } else {\n        console.log(error);\n      }\n    });\n  }\n\n  getSubmittedQuestionsTable() {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      cellSpacing: '0',\n      cellPadding: '0',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      className: 'TableHeader',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, \"Question ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, \"User Question\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, this.state.user_submitted.map((current, index) => {\n      if (this.state.current_index <= index && this.state.current_index + this.state.batch_size > index) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 41\n          }\n        }, current.QuestionID), /*#__PURE__*/React.createElement(\"td\", {\n          className: 'Highlight',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 41\n          }\n        }, current.Username), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 41\n          }\n        }, current.Answer1), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => {\n            this.onActionButtonClick(current.QuestionID, 1, index);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 45\n          }\n        }, \"Approve\")), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => {\n            this.onActionButtonClick(current.QuestionID, 2, index);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 45\n          }\n        }, \"Report User\")), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => {\n            this.onActionButtonClick(current.QuestionID, 3, index);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 45\n          }\n        }, \"Delete\")));\n      } else {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 40\n          }\n        });\n      }\n    }, this)));\n  }\n\n  getSubmittedQuestionsNavigation() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: 'TableNavigation',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          'current_index': 0\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, '<<'), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          'current_index': this.state.current_index > this.state.batch_size ? this.state.current_index - this.state.batch_size : 0\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, '<'), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, \"Page \", Math.round(this.state.current_index / this.state.batch_size) + 1, \" of \", this.state.user_submitted.length === 0 ? 1 : Math.ceil(this.state.user_submitted.length / this.state.batch_size)), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          'current_index': this.state.current_index + this.state.batch_size < this.state.user_submitted.length ? this.state.current_index + this.state.batch_size : this.state.user_submitted.length > this.state.batch_size ? this.state.user_submitted.length - this.state.batch_size : 0\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, '>'), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          'current_index': this.state.user_submitted.length > this.state.batch_size ? (Math.ceil(this.state.user_submitted.length / this.state.batch_size) - 1) * this.state.batch_size : 0\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, '>>'));\n  }\n\n  userSubmitQuestion() {\n    this.setState({\n      usersubmitFlag: !this.state.usersubmitFlag\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: 'AdminReviewUserSubmitted',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"usersubmitquestion\",\n      onClick: this.userSubmitQuestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, \"Users' Questions\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }), this.state.usersubmitFlag ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, this.getSubmittedQuestionsTable(), this.getSubmittedQuestionsNavigation()) : '');\n  }\n\n}\n\nexport default AdminReviewUserSubmitted;","map":{"version":3,"sources":["C:/Users/Stefan Madalin/Desktop/ProiectPW/react-frontend/src/components/Admin/AdminReviewUserSubmitted/AdminReviewUserSubmitted.js"],"names":["React","axios","AdminReviewUserSubmitted","Component","constructor","props","state","usersubmitFlag","onActionButtonClick","bind","getSubmittedQuestionsTable","getSubmittedQuestionsNavigation","getUserSubmitted","userSubmitQuestion","componentDidMount","options","localStorage","getItem","get","then","result","setState","data","forceUpdate","catch","error","console","log","response","question_id","action","index","params","URLSearchParams","append","post","user_submitted","map","current","current_index","batch_size","QuestionID","Username","Answer1","Math","round","length","ceil","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './AdminReviewUserSubmitted.scss'\nimport axios from 'axios';\n\nclass AdminReviewUserSubmitted extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            'user_submitted': [],\n            'batch_size': 15,\n            'current_index': 0,\n            usersubmitFlag: false\n        };\n\n        this.onActionButtonClick = this.onActionButtonClick.bind(this);\n        this.getSubmittedQuestionsTable = this.getSubmittedQuestionsTable.bind(this);\n        this.getSubmittedQuestionsNavigation = this.getSubmittedQuestionsNavigation.bind(this);\n        this.getUserSubmitted = this.getUserSubmitted.bind(this);\n        this.userSubmitQuestion = this.userSubmitQuestion.bind(this);\n    }\n\n    componentDidMount() {\n        this.getUserSubmitted();\n    }\n\n    getUserSubmitted() {\n        const options = {\n            'headers': {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        };\n\n        axios.get(\n            'http://localhost:80/admin/user_submitted',\n            options\n        ).then((result) => {\n            this.setState({\n                'user_submitted': result.data\n            });\n\n            this.forceUpdate();\n        }).catch((error) => {\n            if ('response' in error) {\n                console.log(error.response);\n            } else {\n                console.log(error);\n            }\n        });\n    }\n\n    onActionButtonClick(question_id, action, index) {\n        const params = new URLSearchParams();\n\n        params.append('question_id', question_id);\n        params.append('action', action);\n\n        const options = {\n            'headers': {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        }\n\n        axios.post(\n            'http://localhost:80/admin/user_submitted',\n            params,\n            options\n        ).then(() => {\n            this.getUserSubmitted();\n        }).catch((error) => {\n            if ('response' in error) {\n                console.log(error.response);\n            } else {\n                console.log(error);\n            }\n        })\n    }\n\n    getSubmittedQuestionsTable() {\n        return (\n            <table cellSpacing={'0'} cellPadding={'0'}>\n                <thead>\n                    <tr className={'TableHeader'}>\n                        <th>Question ID</th>\n                        <th>Username</th>\n                        <th>User Question</th>\n                        <th />\n                        <th />\n                        <th />\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {\n                        this.state.user_submitted.map((current, index) => {\n                            if (this.state.current_index <= index &&\n                                this.state.current_index + this.state.batch_size > index) {\n                                return (\n\n                                    <tr key={index}>\n                                        <td>{current.QuestionID}</td>\n                                        <td className={'Highlight'}>{current.Username}</td>\n                                        <td>{current.Answer1}</td>\n                                        <td>\n                                            <button onClick={() => {\n                                                this.onActionButtonClick(current.QuestionID, 1, index);\n                                            }}>\n                                                Approve\n                                        </button>\n                                        </td>\n                                        <td>\n                                            <button onClick={() => {\n                                                this.onActionButtonClick(current.QuestionID, 2, index);\n                                            }}>\n                                                Report User\n                                        </button>\n                                        </td>\n                                        <td>\n                                            <button onClick={() => {\n                                                this.onActionButtonClick(current.QuestionID, 3, index);\n                                            }}>\n                                                Delete\n                                        </button>\n                                        </td>\n                                    </tr>\n                                );\n                            } else {\n                                return <span />\n                            }\n                        }, this)\n                    }\n                </tbody>\n\n            </table>\n        );\n    }\n\n    getSubmittedQuestionsNavigation() {\n        return (\n            <div className={'TableNavigation'}>\n                <button onClick={() => { this.setState({ 'current_index': 0 }); }}>\n                    {'<<'}\n                </button>\n                <button onClick={() => {\n                    this.setState({\n                        'current_index': this.state.current_index > this.state.batch_size ?\n                            this.state.current_index - this.state.batch_size :\n                            0\n                    });\n                }}>\n                    {'<'}\n                </button>\n                <span>\n                    Page {\n                        Math.round(this.state.current_index / this.state.batch_size) + 1\n                    } of {\n                        this.state.user_submitted.length === 0 ?\n                            1 :\n                            Math.ceil(this.state.user_submitted.length / this.state.batch_size)\n                    }\n                </span>\n                <button onClick={() => {\n                    this.setState({\n                        'current_index':\n                            this.state.current_index + this.state.batch_size < this.state.user_submitted.length ?\n                                this.state.current_index + this.state.batch_size :\n                                this.state.user_submitted.length > this.state.batch_size ?\n                                    this.state.user_submitted.length - this.state.batch_size :\n                                    0\n                    });\n                }}>\n                    {'>'}\n                </button>\n                <button onClick={() => {\n                    this.setState({\n                        'current_index': this.state.user_submitted.length > this.state.batch_size ?\n                            (Math.ceil(this.state.user_submitted.length / this.state.batch_size) - 1) *\n                            this.state.batch_size :\n                            0\n                    });\n                }}>\n                    {'>>'}\n                </button>\n            </div>\n        )\n    }\n\n    userSubmitQuestion() {\n\n        this.setState({\n            usersubmitFlag: !this.state.usersubmitFlag,\n        })\n    }\n    render() {\n        return (\n            <div className={'AdminReviewUserSubmitted'}>\n                <a href=\"#\" className=\"usersubmitquestion\" onClick={this.userSubmitQuestion}>Users' Questions</a>\n                <br />\n                <br />\n                {this.state.usersubmitFlag ?\n                    <div>\n                        {\n                            this.getSubmittedQuestionsTable()\n                        }\n                        {\n                            this.getSubmittedQuestionsNavigation()\n                        }\n                    </div> : ''\n                }\n            </div>\n        )\n    }\n}\n\nexport default AdminReviewUserSubmitted;"]},"metadata":{},"sourceType":"module"}