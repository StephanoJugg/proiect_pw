{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stefan Madalin\\\\Desktop\\\\ProiectPW\\\\react-frontend\\\\src\\\\components\\\\SupportPage\\\\SupportPage.js\";\nimport React from 'react';\nimport './SupportPage.scss';\nimport CollapsibleItem from \"../CollapsibleItem\";\nimport axios from 'axios';\n\nclass SupportPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'messages': []\n    };\n    this.onSend = this.onSend.bind(this);\n    this.displayMessage = this.displayMessage.bind(this);\n    this.onFlagImportant = this.onFlagImportant.bind(this);\n    this.onReport = this.onReport.bind(this);\n    this.getMessages = this.getMessages.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n  }\n\n  componentDidMount() {\n    this.getMessages();\n  }\n\n  getMessages() {\n    const options = {\n      'headers': {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    };\n    axios.get('http://localhost:80/support/messages', options).then(result => {\n      this.setState({\n        'messages': result.data\n      });\n    }).catch(error => {\n      if (error.response !== undefined) {\n        console.log(error.response);\n      } else {\n        console.log(error);\n      }\n    });\n  }\n\n  onSend(message) {\n    if (message.text_value.length === 0) {\n      return;\n    }\n\n    message.Response = message.text_value;\n    let params = new URLSearchParams();\n    params.append('response', message.Response);\n    params.append('message_id', message.MessageID);\n    const options = {\n      'headers': {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    };\n    axios.post('http://localhost:80/support/messages', params, options).then(() => {}).catch(error => {\n      if (error.response !== undefined) {\n        console.log(error.response);\n      } else {\n        console.log(error);\n      }\n    });\n  }\n\n  onFlagImportant(message) {\n    if (message.Flagged_important === 1) {\n      console.log(\"this is already marked as important\");\n      return;\n    }\n\n    message.important = message['important'] === undefined || message['important'] === false;\n    const params = new URLSearchParams();\n    params.append('message_id', message.MessageID);\n    params.append('important', message.important ? '1' : '0');\n    const options = {\n      'headers': {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    };\n    axios.post('http://localhost:80/support/messages', params, options).then(() => {}).catch(error => {\n      if (error.response !== undefined) {\n        console.log(error.response);\n      } else {\n        console.log(error);\n      }\n    });\n  }\n\n  onReport(message) {\n    const params = new URLSearchParams();\n    params.append('message_id', message.MessageID);\n    const options = {\n      'headers': {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    };\n    axios.post('http://localhost:80/support/messages', params, options).then(() => {\n      this.getMessages();\n    }).catch(error => {\n      if (error.response !== undefined) {\n        console.log(error.response);\n      } else {\n        console.log(error);\n      }\n    });\n  }\n\n  onDelete(message) {\n    const options = {\n      'headers': {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    };\n    axios.delete(`http://localhost:80/support/messages/${message.MessageID}`, options).then(() => {\n      this.getMessages();\n    }).catch(error => {\n      if (error.response !== undefined) {\n        console.log(error.response);\n      } else {\n        console.log(error);\n      }\n    });\n  }\n\n  displayMessage(message, index) {\n    message['text_value'] = '';\n    return /*#__PURE__*/React.createElement(CollapsibleItem, {\n      header: message.Message,\n      key: index,\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        className: 'MessageContainer',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.onReport(message);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }\n      }, \"Strike user\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.onDelete(message);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }\n      }, \"Delete\"), message.Response !== null ? /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.onFlagImportant(message);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 33\n        }\n      }, message['Flagged_important'] === undefined || message['Flagged_important'] === 0 ? 'Mark important' : 'Marked important') : /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }\n      }), message.Response === null ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        maxLength: '512',\n        placeholder: 'Maximum 512 characters.',\n        onChange: event => {\n          message.text_value = event.target.value;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.onSend(message);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 37\n        }\n      }, \"Send\")) : /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 33\n        }\n      }, message.Response)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: 'SupportPage',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, this.state.messages.length === 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }, \"No messages\") : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 29\n      }\n    }, \"Messages:\"), this.state.messages.map(this.displayMessage)));\n  }\n\n}\n\nexport default SupportPage;","map":{"version":3,"sources":["C:/Users/Stefan Madalin/Desktop/ProiectPW/react-frontend/src/components/SupportPage/SupportPage.js"],"names":["React","CollapsibleItem","axios","SupportPage","Component","constructor","props","state","onSend","bind","displayMessage","onFlagImportant","onReport","getMessages","onDelete","componentDidMount","options","localStorage","getItem","get","then","result","setState","data","catch","error","response","undefined","console","log","message","text_value","length","Response","params","URLSearchParams","append","MessageID","post","Flagged_important","important","delete","index","Message","event","target","value","render","messages","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './SupportPage.scss'\nimport CollapsibleItem from \"../CollapsibleItem\";\nimport axios from 'axios';\n\nclass SupportPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            'messages': []\n        }\n\n        this.onSend = this.onSend.bind(this);\n        this.displayMessage = this.displayMessage.bind(this);\n        this.onFlagImportant = this.onFlagImportant.bind(this);\n        this.onReport = this.onReport.bind(this);\n        this.getMessages = this.getMessages.bind(this);\n        this.onDelete = this.onDelete.bind(this);\n    }\n\n    componentDidMount() {\n        this.getMessages();\n    }\n\n    getMessages() {\n\n        const options = {\n            'headers': {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        }\n\n        axios.get(\n            'http://localhost:80/support/messages',\n            options\n        ).then((result) => {\n\n            this.setState({\n                'messages': result.data\n            });\n\n        }).catch((error) => {\n            if (error.response !== undefined) {\n                console.log(error.response);\n            } else {\n                console.log(error);\n            }\n        });\n    }\n\n    onSend(message) {\n\n        if (message.text_value.length === 0) {\n            return;\n        }\n\n        message.Response = message.text_value;\n\n        let params = new URLSearchParams();\n\n        params.append('response', message.Response);\n        params.append('message_id', message.MessageID);\n\n        const options = {\n            'headers': {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        }\n\n        axios.post(\n            'http://localhost:80/support/messages',\n            params,\n            options\n        ).then(() => {\n        }).catch((error) => {\n            if (error.response !== undefined) {\n                console.log(error.response);\n            } else {\n                console.log(error);\n            }\n        });\n    }\n\n    onFlagImportant(message) {\n\n        if (message.Flagged_important === 1) {\n            console.log(\"this is already marked as important\");\n            return;\n        }\n        message.important = message['important'] === undefined || message['important'] === false;\n\n        const params = new URLSearchParams();\n\n        params.append('message_id', message.MessageID);\n        params.append('important', message.important ? '1' : '0');\n\n        const options = {\n            'headers': {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        }\n\n        axios.post(\n            'http://localhost:80/support/messages',\n            params,\n            options\n        ).then(() => {\n        }).catch((error) => {\n            if (error.response !== undefined) {\n                console.log(error.response);\n            } else {\n                console.log(error);\n            }\n        });\n    }\n\n    onReport(message) {\n        const params = new URLSearchParams();\n        params.append('message_id', message.MessageID);\n\n        const options = {\n            'headers': {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        }\n\n        axios.post(\n            'http://localhost:80/support/messages',\n            params,\n            options\n        ).then(() => {\n            this.getMessages()\n        }).catch((error) => {\n            if (error.response !== undefined) {\n                console.log(error.response);\n            } else {\n                console.log(error);\n            }\n        });\n    }\n\n    onDelete(message) {\n        const options = {\n            'headers': {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        }\n\n        axios.delete(\n            `http://localhost:80/support/messages/${message.MessageID}`,\n            options\n        ).then(() => {\n            this.getMessages()\n        }).catch((error) => {\n            if (error.response !== undefined) {\n                console.log(error.response);\n            } else {\n                console.log(error);\n            }\n        });\n    }\n\n    displayMessage(message, index) {\n\n        message['text_value'] = '';\n        return (\n            <CollapsibleItem header={message.Message} key={index}\n                content={\n                    <div className={'MessageContainer'}>\n                        <button onClick={() => { this.onReport(message) }}>\n                            Strike user\n                        </button>\n                        <button onClick={() => { this.onDelete(message) }}>\n                            Delete\n                        </button>\n                        {\n                            message.Response !== null ?\n                                <button onClick={() => { this.onFlagImportant(message) }}>\n                                    {\n                                        message['Flagged_important'] === undefined ||\n                                            message['Flagged_important'] === 0 ?\n                                            'Mark important' :\n                                            'Marked important'\n                                    }\n                                </button> :\n                                <span />\n                        }\n                        <hr />\n                        {\n                            message.Response === null ?\n                                <span>\n                                    <textarea maxLength={'512'}\n                                        placeholder={'Maximum 512 characters.'}\n                                        onChange={(event) => {\n                                            message.text_value = event.target.value;\n                                        }} />\n                                    <br />\n                                    <button onClick={() => { this.onSend(message); }}>\n                                        Send\n                                    </button>\n                                </span> :\n                                <p>{message.Response}</p>\n                        }\n                    </div>\n                }\n            />\n        );\n    }\n\n    render() {\n\n        return (\n            <div className={'SupportPage'} >\n                {\n                    this.state.messages.length === 0 ?\n                        <h1>No messages</h1> :\n                        <span>\n                            <h1>Messages:</h1>\n                            {\n\n                                this.state.messages.map(this.displayMessage)\n                            }\n                        </span>\n                }\n            </div >\n        );\n    }\n}\n\nexport default SupportPage;"]},"metadata":{},"sourceType":"module"}