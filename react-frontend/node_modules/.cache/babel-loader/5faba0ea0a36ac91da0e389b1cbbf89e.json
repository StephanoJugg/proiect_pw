{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stefan Madalin\\\\Desktop\\\\ProiectPW\\\\react-frontend\\\\src\\\\components\\\\ContactPage\\\\ContactPage.js\";\nimport React from \"react\";\nimport './ContactPage.scss';\nimport axios from \"axios\";\nimport CollapsibleItem from \"../CollapsibleItem\";\n\nclass ContactPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'text_value': '',\n      'with_response_messages': [],\n      'no_response_messages': []\n    };\n    this.onSend = this.onSend.bind(this);\n    this.getMessages = this.getMessages.bind(this);\n  }\n\n  componentDidMount() {\n    this.getMessages();\n  }\n\n  onSend() {\n    if (this.state.text_value.length === 0) {\n      return;\n    }\n\n    let params = new URLSearchParams();\n    params.append('message', this.state.text_value);\n    axios.put('http://localhost:80/user/contact', params, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(() => {\n      this.setState({\n        'text_value': ''\n      });\n      this.getMessages();\n    }).catch(error => {\n      if ('response' in error) {\n        console.log(error.response);\n      } else {\n        console.log(error);\n      }\n    });\n  }\n\n  getMessages() {\n    if (localStorage.getItem('token') === null) {\n      return;\n    }\n\n    axios.get('http://localhost:80/user/contact', {\n      'headers': {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(result => {\n      this.setState({\n        'no_response_messages': result.data.no_response_messages,\n        'with_response_messages': result.data.with_response_messages\n      });\n      this.forceUpdate();\n    }).catch(error => {\n      if ('response' in error) {\n        console.log(error.response);\n      } else {\n        console.log(error);\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: 'ContactPage',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, localStorage.getItem('token') !== null ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, \"Message us\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: 'TextBox',\n      value: this.state.text_value,\n      autoFocus: true,\n      maxLength: '1024',\n      placeholder: 'Type here...',\n      onChange: event => {\n        this.setState({\n          'text_value': event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: 'SendButton',\n      type: 'submit',\n      value: 'Submit',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }), this.state.with_response_messages.length > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 41\n      }\n    }, \"replied messages:\"), this.state.with_response_messages.map((message, index) => {\n      return /*#__PURE__*/React.createElement(CollapsibleItem, {\n        key: index,\n        header: message.Message,\n        response: message.Response,\n        admin_name: message.Username,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 56\n        }\n      });\n    })) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 37\n      }\n    }), this.state.no_response_messages.length > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 41\n      }\n    }, \"Not yet answered messages:\"), this.state.no_response_messages.map(message => {\n      return /*#__PURE__*/React.createElement(CollapsibleItem, {\n        header: message.Message,\n        content: message.Message,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 56\n        }\n      });\n    })) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 37\n      }\n    })) : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, \"You must be logged in to send messages.\"));\n  }\n\n}\n\nexport default ContactPage;","map":{"version":3,"sources":["C:/Users/Stefan Madalin/Desktop/ProiectPW/react-frontend/src/components/ContactPage/ContactPage.js"],"names":["React","axios","CollapsibleItem","ContactPage","Component","constructor","props","state","onSend","bind","getMessages","componentDidMount","text_value","length","params","URLSearchParams","append","put","headers","localStorage","getItem","then","setState","catch","error","console","log","response","get","result","data","no_response_messages","with_response_messages","forceUpdate","render","event","target","value","map","message","index","Message","Response","Username"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './ContactPage.scss'\nimport axios from \"axios\";\nimport CollapsibleItem from \"../CollapsibleItem\";\n\nclass ContactPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            'text_value': '',\n            'with_response_messages': [],\n            'no_response_messages': []\n        };\n\n        this.onSend = this.onSend.bind(this);\n        this.getMessages = this.getMessages.bind(this);\n    }\n\n    componentDidMount() {\n        this.getMessages();\n    }\n\n    onSend() {\n        if (this.state.text_value.length === 0) {\n            return;\n        }\n\n        let params = new URLSearchParams();\n\n        params.append('message', this.state.text_value);\n\n        axios.put(\n            'http://localhost:80/user/contact',\n            params,\n            {\n                headers: {\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                }\n            }\n        ).then(() => {\n            this.setState({ 'text_value': '' });\n            this.getMessages();\n        }).catch((error) => {\n            if ('response' in error) {\n                console.log(error.response);\n            } else {\n                console.log(error);\n            }\n        });\n    }\n\n    getMessages() {\n        if (localStorage.getItem('token') === null) {\n            return;\n        }\n\n        axios.get(\n            'http://localhost:80/user/contact',\n            {\n                'headers': {\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                }\n            }\n        ).then((result) => {\n\n            this.setState({\n                'no_response_messages': result.data.no_response_messages,\n                'with_response_messages': result.data.with_response_messages\n            });\n\n            this.forceUpdate();\n        }).catch((error) => {\n            if ('response' in error) {\n                console.log(error.response);\n            } else {\n                console.log(error);\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div className={'ContactPage'}>\n                {\n                    localStorage.getItem('token') !== null ?\n                        <span>\n                            <h1>Message us</h1>\n                            <form onSubmit={this.onSend}>\n                                <textarea className={'TextBox'} value={this.state.text_value} autoFocus={true}\n                                    maxLength={'1024'} placeholder={'Type here...'}\n                                    onChange={(event) => {\n                                        this.setState({ 'text_value': event.target.value });\n                                    }} />\n                                <br />\n                                <input className={'SendButton'} type={'submit'} value={'Submit'} />\n                            </form>\n                            <br />\n                            <br />\n                            {\n                                this.state.with_response_messages.length > 0 ?\n                                    <span>\n                                        <h1>replied messages:</h1>\n                                        {\n                                            this.state.with_response_messages.map((message, index) => {\n                                                return <CollapsibleItem key={index} header={message.Message}\n                                                    response={message.Response}\n                                                    admin_name={message.Username} />\n                                            })\n                                        }\n                                    </span> :\n                                    <span />\n                            }\n                            {\n                                this.state.no_response_messages.length > 0 ?\n                                    <span>\n                                        <h1>Not yet answered messages:</h1>\n                                        {\n                                            this.state.no_response_messages.map((message) => {\n                                                return <CollapsibleItem header={message.Message}\n                                                    content={message.Message} />\n                                            })\n                                        }\n                                    </span> :\n                                    <span />\n                            }\n                        </span> :\n                        <h1>You must be logged in to send messages.</h1>\n                }\n            </div>\n        );\n    }\n}\n\n\nexport default ContactPage;"]},"metadata":{},"sourceType":"module"}